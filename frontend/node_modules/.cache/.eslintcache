[{"C:\\Users\\binh\\Desktop\\job\\frontend\\src\\index.js":"1","C:\\Users\\binh\\Desktop\\job\\frontend\\src\\App.js":"2","C:\\Users\\binh\\Desktop\\job\\frontend\\src\\reportWebVitals.js":"3","C:\\Users\\binh\\Desktop\\job\\frontend\\src\\screens\\HomeScreen.js":"4","C:\\Users\\binh\\Desktop\\job\\frontend\\src\\components\\Post.js":"5","C:\\Users\\binh\\Desktop\\job\\frontend\\src\\components\\constant.js":"6","C:\\Users\\binh\\Desktop\\job\\frontend\\src\\screens\\PostScreen.js":"7","C:\\Users\\binh\\Desktop\\job\\frontend\\src\\screens\\SearchScreen.js":"8","C:\\Users\\binh\\Desktop\\job\\frontend\\src\\screens\\LoginScreen.js":"9","C:\\Users\\binh\\Desktop\\job\\frontend\\src\\screens\\ProfileScreen.js":"10","C:\\Users\\binh\\Desktop\\job\\frontend\\src\\screens\\CreatePostScreen.js":"11","C:\\Users\\binh\\Desktop\\job\\frontend\\src\\screens\\UserListScreen.js":"12","C:\\Users\\binh\\Desktop\\job\\frontend\\src\\screens\\UserEditScreen.js":"13","C:\\Users\\binh\\Desktop\\job\\frontend\\src\\screens\\SignUpScreen.js":"14","C:\\Users\\binh\\Desktop\\job\\frontend\\src\\screens\\PostListScreen.js":"15","C:\\Users\\binh\\Desktop\\job\\frontend\\src\\screens\\PostEditScreen.js":"16","C:\\Users\\binh\\Desktop\\job\\frontend\\src\\screens\\UncheckPostListScreen.js":"17"},{"size":582,"mtime":1653400228125,"results":"18","hashOfConfig":"19"},{"size":7019,"mtime":1653531905727,"results":"20","hashOfConfig":"19"},{"size":362,"mtime":1653398782272,"results":"21","hashOfConfig":"19"},{"size":1227,"mtime":1653505797799,"results":"22","hashOfConfig":"19"},{"size":804,"mtime":1653443914381,"results":"23","hashOfConfig":"19"},{"size":113,"mtime":1653648401152,"results":"24","hashOfConfig":"19"},{"size":1624,"mtime":1653437989576,"results":"25","hashOfConfig":"19"},{"size":1446,"mtime":1653441835730,"results":"26","hashOfConfig":"19"},{"size":2453,"mtime":1653521593307,"results":"27","hashOfConfig":"19"},{"size":3225,"mtime":1653469625229,"results":"28","hashOfConfig":"19"},{"size":3425,"mtime":1653500845359,"results":"29","hashOfConfig":"19"},{"size":2298,"mtime":1653506099482,"results":"30","hashOfConfig":"19"},{"size":2392,"mtime":1653505734792,"results":"31","hashOfConfig":"19"},{"size":3307,"mtime":1653521667712,"results":"32","hashOfConfig":"19"},{"size":2650,"mtime":1653524858296,"results":"33","hashOfConfig":"19"},{"size":3592,"mtime":1653526764962,"results":"34","hashOfConfig":"19"},{"size":2954,"mtime":1653532243676,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},"1q7eqoe",{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"47","messages":"48","suppressedMessages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50"},{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","suppressedMessages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"39"},{"filePath":"61","messages":"62","suppressedMessages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"39"},{"filePath":"65","messages":"66","suppressedMessages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68"},{"filePath":"69","messages":"70","suppressedMessages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72"},{"filePath":"73","messages":"74","suppressedMessages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76"},{"filePath":"77","messages":"78","suppressedMessages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80"},{"filePath":"81","messages":"82","suppressedMessages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84"},{"filePath":"85","messages":"86","suppressedMessages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88"},{"filePath":"89","messages":"90","suppressedMessages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92"},{"filePath":"93","messages":"94","suppressedMessages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"96","messages":"97","suppressedMessages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99"},"C:\\Users\\binh\\Desktop\\job\\frontend\\src\\index.js",[],[],[],"C:\\Users\\binh\\Desktop\\job\\frontend\\src\\App.js",[],[],[],"C:\\Users\\binh\\Desktop\\job\\frontend\\src\\reportWebVitals.js",[],[],"C:\\Users\\binh\\Desktop\\job\\frontend\\src\\screens\\HomeScreen.js",["100","101","102","103"],[],"import Post from \"../components/Post\";\r\nimport { apiUrl } from \"../components/constant\";\r\nimport { useEffect, useReducer, useContext } from \"react\";\r\nimport React from \"react\";\r\nimport axios from \"axios\";\r\nimport { Row, Col } from \"react-bootstrap\";\r\nimport { PostContext } from \"../App\";\r\n\r\nfunction HomeScreen() {\r\n  const { posts, setPosts, search, setS } = useContext(PostContext);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const result = await axios.get(`${apiUrl}/api/posts`);\r\n        setPosts(result.data.sort((a, b) => a.createdAt - b.createdAt));\r\n      } catch (err) {\r\n        console(err.message);\r\n      }\r\n    };\r\n    fetchData();\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"posts\">\r\n      <Row>\r\n        {posts.map((post) => {\r\n          console.log(search)\r\n          if (\r\n            post.title.toLowerCase().indexOf(search) !== -1 ||\r\n            post.content.toLowerCase().indexOf(search) !== -1\r\n          )\r\n            return (\r\n              <Col key={post.slug} sm={6} md={4} lg={3} className=\"mb-3\">\r\n                <Post post={post}></Post>\r\n              </Col>\r\n            );\r\n        })}\r\n      </Row>\r\n    </div>\r\n  );\r\n}\r\nexport default HomeScreen;\r\n","C:\\Users\\binh\\Desktop\\job\\frontend\\src\\components\\Post.js",[],[],"C:\\Users\\binh\\Desktop\\job\\frontend\\src\\components\\constant.js",[],[],"C:\\Users\\binh\\Desktop\\job\\frontend\\src\\screens\\PostScreen.js",["104","105","106","107"],[],"import \"../css/PostScreen.css\";\r\nimport { useContext, useEffect, useReducer } from \"react\";\r\nimport { useNavigate, useParams } from \"react-router-dom\";\r\nimport { apiUrl } from \"../components/constant\";\r\nimport axios from \"axios\";\r\nimport moment from \"moment\";\r\nconst reducer = (state, action) => {\r\n  switch (action.type) {\r\n\r\n    case \"FETCH_SUCCESS\":\r\n      return { ...state, post: action.payload};\r\n    case \"FETCH_FAIL\":\r\n      return { ...state, error: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\nfunction PostScreen() {\r\n  const navigate = useNavigate();\r\n  const params = useParams();\r\n  const { slug } = params;\r\n  console.log(slug)\r\n  const [{  error, post }, dispatch] = useReducer(reducer, {\r\n    post: [],\r\n    error: \"\",\r\n  });\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      \r\n      try {\r\n        const result = await axios.get(`${apiUrl}/api/posts/slug/${slug}`);\r\n        dispatch({ type: \"FETCH_SUCCESS\", payload: result.data });\r\n      } catch (err) {\r\n        dispatch({ type: \"FETCH_FAIL\", payload: err });\r\n      }\r\n    };\r\n    fetchData();\r\n  }, [slug]);\r\n  return (\r\n    <div className=\"post_page\">\r\n      <div className=\"metadata\">\r\n        <a href=\"\">\r\n          <div className=\"category\">{post.category}</div>\r\n        </a>\r\n        <div className=\"createdat\">{moment(post.createAt).format(\"DD-MM-YYYY HH:mm:ss\")}</div>\r\n      </div>\r\n      <div className=\"title\">\r\n        <h1>{post.title}</h1>\r\n      </div>\r\n      <div className=\"content\">\r\n        <p>\r\n\r\n        {post.content}\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nexport default PostScreen;\r\n","C:\\Users\\binh\\Desktop\\job\\frontend\\src\\screens\\SearchScreen.js",["108","109"],[],"import Post from \"../components/Post\";\r\nimport { apiUrl } from \"../components/constant\";\r\nimport {useLocation} from \"react-router-dom\"\r\nimport { useEffect, useReducer } from 'react';\r\nimport React from \"react\";\r\nimport axios from 'axios';\r\nimport {Row,Col} from 'react-bootstrap';\r\n\r\nconst reducer = (state, action) => {\r\n  switch (action.type) {\r\n    case \"FETCH_REQUEST\":\r\n      return { ...state};\r\n    case \"FETCH_SUCCESS\":\r\n      return { ...state, posts: action.payload };\r\n    case \"FETCH_FAIL\":\r\n      return { ...state, error: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\nfunction SearchScreen() {\r\n  const { search } = useLocation();\r\n  const chude = new URLSearchParams(search);\r\n  const [{  error, posts }, dispatch] = useReducer(reducer, {\r\n    posts: [],\r\n    error: \"\",\r\n  });\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const result = await axios.get(`${apiUrl}/api/posts/${chude}`);\r\n        dispatch({ type: \"FETCH_SUCCESS\", payload: result.data });\r\n      } catch (err) {\r\n        dispatch({ type: \"FETCH_FAIL\", payload: err.message });\r\n      }\r\n\r\n    };\r\n    fetchData();\r\n  }, []);\r\n  return (\r\n    <div className=\"\">\r\n      <Row>\r\n        {posts.map((post) => (\r\n          <Col key={post.slug} sm={6} md={4} lg={3} className=\"mb-3\">\r\n            <Post post={post}></Post>\r\n          </Col>\r\n        ))}\r\n      </Row>\r\n    </div>\r\n  );\r\n}\r\nexport default SearchScreen;\r\n","C:\\Users\\binh\\Desktop\\job\\frontend\\src\\screens\\LoginScreen.js",["110","111"],[],"import axios from \"axios\";\r\nimport React, { useContext, useEffect, useState } from \"react\";\r\nimport { PostContext } from \"../App\";\r\nimport { apiUrl } from \"../components/constant\";\r\nimport \"../css/LoginScreen.css\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nfunction LoginScreen() {\r\n  const navigate = useNavigate();\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const { showNavBar, setShowOffNavBar, setUserInfo, userInfo } =\r\n    useContext(PostContext);\r\n  useEffect(() => {\r\n    const a = () => {\r\n      console.log(showNavBar);\r\n      try {\r\n        setShowOffNavBar(false);\r\n      } catch (err) {}\r\n    };\r\n    a();\r\n  }, []);\r\n  const submitHandler = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const { data } = await axios.post(`${apiUrl}/api/users/signin`, {\r\n        email,\r\n        password,\r\n      });\r\n      setUserInfo(data);\r\n      localStorage.setItem(\"userInfo\", JSON.stringify(data));\r\n      setShowOffNavBar(true);\r\n      navigate(\"/\");\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n  return (\r\n    <center className=\"login_form\">\r\n      <div className=\"container_form\">\r\n        <div className=\"container_wrap\">\r\n          <form onSubmit={submitHandler}>\r\n            <h1>Sign In</h1>\r\n            <div className=\"mb-3 email\">\r\n              <h5>Email address</h5>\r\n\r\n              <input\r\n                type=\"email\"\r\n                className=\"form-control\"\r\n                placeholder=\"Enter email\"\r\n                value={email}\r\n                onChange={(e) => setEmail(e.target.value)}\r\n              />\r\n            </div>\r\n            <div className=\"mb-3 password\">\r\n              <h5>Password</h5>\r\n              <input\r\n                type=\"password\"\r\n                className=\"form-control\"\r\n                placeholder=\"Enter password\"\r\n                value={password}\r\n                onChange={(e) => setPassword(e.target.value)}\r\n              />\r\n            </div>\r\n\r\n            <div className=\"d-grid\">\r\n              <button type=\"submit\" className=\"btn btn-primary login_btn\">\r\n                Submit\r\n              </button>\r\n            </div>\r\n            <p className=\"forgot-password text-right dangky\">\r\n              Bạn chưa tạo tài khoản? <a href=\"/api/users/signup\">Đăng ký</a>\r\n            </p>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </center>\r\n  );\r\n}\r\nexport default LoginScreen;\r\n","C:\\Users\\binh\\Desktop\\job\\frontend\\src\\screens\\ProfileScreen.js",["112","113"],[],"import React, { useContext, useEffect, useReducer, useState } from \"react\";\r\nimport \"../css/ProfileScreen.css\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport { apiUrl } from \"../components/constant\";\r\nimport { PostContext } from \"../App\";\r\n\r\nexport default function ProfileScreen() {\r\n  const navigate = useNavigate();\r\n  const { setShowOffNavBar, userInfo, setUserInfo } = useContext(PostContext);\r\n  useEffect(() => {\r\n    const a = () => {\r\n      setShowOffNavBar(false);\r\n    };\r\n    a();\r\n  }, []);\r\n  const [name, setName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n\r\n  const submitHandler = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const { data } = await axios.put(\r\n        `${apiUrl}/api/users/profile`,\r\n        {\r\n          name,\r\n          email,\r\n          password,\r\n        },\r\n        {\r\n          headers: { Authorization: `Bearer ${userInfo.token}` },\r\n        }\r\n      );\r\n      setUserInfo(data);\r\n      localStorage.setItem(\"userInfo\", JSON.stringify(data));\r\n      setShowOffNavBar(true);\r\n      navigate(\"/\");\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n  return (\r\n    <div className=\"container small-container\">\r\n      <h1 className=\"my-3\">Thông tin người dùng</h1>\r\n      <center>\r\n        <div className=\"container_form\">\r\n          <div className=\"container_wrap\">\r\n            <form onSubmit={submitHandler}>\r\n              <Form.Group className=\"mb-3 email\" controlId=\"name\">\r\n                <Form.Label>Tên</Form.Label>\r\n                <Form.Control\r\n                  value={name}\r\n                  onChange={(e) => setName(e.target.value)}\r\n                  required\r\n                />\r\n              </Form.Group>\r\n              <Form.Group className=\"mb-3 email\" controlId=\"name\">\r\n                <Form.Label>Email</Form.Label>\r\n                <Form.Control\r\n                  type=\"email\"\r\n                  value={email}\r\n                  onChange={(e) => setEmail(e.target.value)}\r\n                  required\r\n                />\r\n              </Form.Group>\r\n              <Form.Group className=\"mb-3 email\" controlId=\"password\">\r\n                <Form.Label>Password</Form.Label>\r\n                <Form.Control\r\n                  type=\"password\"\r\n                  value={password}\r\n                  onChange={(e) => setPassword(e.target.value)}\r\n                />\r\n              </Form.Group>\r\n              <Form.Group className=\"mb-3 email\" controlId=\"password\">\r\n                <Form.Label>Confirm Password</Form.Label>\r\n                <Form.Control\r\n                  type=\"password\"\r\n                  value={confirmPassword}\r\n                  onChange={(e) => setConfirmPassword(e.target.value)}\r\n                />\r\n              </Form.Group>\r\n              <div className=\"mb-3\">\r\n                <Button type=\"submit\">Cập nhật thông tin</Button>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </center>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\binh\\Desktop\\job\\frontend\\src\\screens\\CreatePostScreen.js",["114"],[],"import axios from \"axios\";\r\nimport { useContext, useEffect, useState } from \"react\";\r\nimport { Form, Button } from \"react-bootstrap\";\r\nimport { PostContext } from \"../App\";\r\nimport { apiUrl } from \"../components/constant\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nexport default function CreatePostScreen() {\r\n  const navigate = useNavigate();\r\n  const [title, setTitle] = useState(\"\");\r\n  const [slug, setSlug] = useState(\"\");\r\n\r\n  const [image, setImage] = useState(\"\");\r\n\r\n  const [category, setCategory] = useState(\"\");\r\n\r\n  const [content, setContent] = useState(\"\");\r\n  const { userInfo } = useContext(PostContext);\r\n  useEffect(() => {\r\n    const a = () => {\r\n      setShowOffNavBar(false);\r\n    };\r\n    a();\r\n  });\r\n  const submitHandler = async (e) => {\r\n    e.preventDefault();\r\n\r\n    try {\r\n      const data = await axios.post(\r\n        `${apiUrl}/api/uncheckposts`,\r\n        {\r\n          title,\r\n          slug,\r\n          image,\r\n          category,\r\n          content,\r\n        },\r\n        {\r\n          headers: { Authorization: `Bearer ${userInfo.token}` },\r\n        }\r\n      );\r\n      setShowOffNavBar(true);\r\n\r\n      navigate(\"/\");\r\n    } catch (err) {\r\n      console.log(e);\r\n    }\r\n  };\r\n  const { setShowOffNavBar } = useContext(PostContext);\r\n  return (\r\n    <div className=\"container small-container\">\r\n      <h1 className=\"my-3\">Tạo bài viết</h1>\r\n      <center>\r\n        <div className=\"container_form\">\r\n          <div className=\"container_wrap\">\r\n            <Form onSubmit={submitHandler}>\r\n              <Form.Group className=\"mb-3 email\" controlId=\"name\">\r\n                <Form.Label>Title</Form.Label>\r\n                <Form.Control\r\n                  value={title}\r\n                  onChange={(e) => setTitle(e.target.value)}\r\n                  required\r\n                />\r\n              </Form.Group>\r\n              <Form.Group className=\"mb-3 email\" controlId=\"slug\">\r\n                <Form.Label>Slug</Form.Label>\r\n                <Form.Control\r\n                  value={slug}\r\n                  onChange={(e) => setSlug(e.target.value)}\r\n                  required\r\n                />\r\n              </Form.Group>\r\n\r\n              <Form.Group className=\"mb-3 email\" controlId=\"image\">\r\n                <Form.Label>Image File</Form.Label>\r\n                <Form.Control\r\n                  value={image}\r\n                  onChange={(e) => setImage(e.target.value)}\r\n                  required\r\n                />\r\n              </Form.Group>\r\n\r\n              <Form.Group className=\"mb-3 email\" controlId=\"category\">\r\n                <Form.Label>Category</Form.Label>\r\n                <Form.Control\r\n                  value={category}\r\n                  onChange={(e) => setCategory(e.target.value)}\r\n                  required\r\n                />\r\n              </Form.Group>\r\n              <Form.Group className=\"mb-3 email\" controlId=\"brand\">\r\n                <Form.Label>Content</Form.Label>\r\n                <Form.Control\r\n                  as=\"textarea\"\r\n                  rows={5}\r\n                  value={content}\r\n                  onChange={(e) => setContent(e.target.value)}\r\n                  required\r\n                />\r\n              </Form.Group>\r\n\r\n              <div className=\"mb-3\">\r\n                <Button type=\"submit\">Submit</Button>\r\n              </div>\r\n            </Form>\r\n          </div>\r\n        </div>\r\n      </center>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\binh\\Desktop\\job\\frontend\\src\\screens\\UserListScreen.js",["115"],[],"import axios from \"axios\";\r\nimport { useContext, useEffect, useState } from \"react\";\r\nimport { apiUrl } from \"../components/constant\";\r\nimport { Button } from \"react-bootstrap\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { PostContext } from \"../App\";\r\n\r\nexport default function UserListScreen() {\r\n  const navigate = useNavigate();\r\n  const [users, setUsers] = useState([]);\r\n  const [successDelete, setSuccessDelete] = useState(false);\r\n\r\n  const { userInfo } = useContext(PostContext);\r\n  useEffect(() => {\r\n    const getUsers = async () => {\r\n      try {\r\n        const { data } = await axios.get(`${apiUrl}/api/users`, {\r\n          headers: { Authorization: `Bearer ${userInfo.token}` },\r\n        });\r\n        setUsers(data);\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    };\r\n    getUsers();\r\n  },[userInfo,successDelete]);\r\n  const deleteHandler = async (user) => {\r\n    console.log(user);\r\n    if (window.confirm(\"Are you sure to delete?\")) {\r\n      try {\r\n        const { data } = await axios.delete(`${apiUrl}/api/users/${user._id}`, {\r\n          headers: { Authorization: `Bearer ${userInfo.token}` },\r\n        });\r\n        setSuccessDelete(prev=>!prev)\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    }\r\n  };\r\n  return (\r\n    <table className=\"table\">\r\n      <thead>\r\n        <tr>\r\n          <th>ID</th>\r\n          <th>NAME</th>\r\n          <th>EMAIL</th>\r\n          <th>IS ADMIN</th>\r\n          <th>ACTIONS</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        {users.map((user) => (\r\n          <tr key={user._id}>\r\n            <td>{user._id}</td>\r\n            <td>{user.name}</td>\r\n            <td>{user.email}</td>\r\n            <td>{user.isAdmin ? \"YES\" : \"NO\"}</td>\r\n            <td>\r\n              <Button\r\n                type=\"button\"\r\n                variant=\"light\"\r\n                onClick={() => navigate(`/admin/users/${user._id}`)}\r\n              >\r\n                Edit\r\n              </Button>\r\n              &nbsp;\r\n              <Button\r\n                type=\"button\"\r\n                variant=\"light\"\r\n                onClick={() => deleteHandler(user)}\r\n              >\r\n                Delete\r\n              </Button>\r\n            </td>\r\n          </tr>\r\n        ))}\r\n      </tbody>\r\n    </table>\r\n  );\r\n}\r\n","C:\\Users\\binh\\Desktop\\job\\frontend\\src\\screens\\UserEditScreen.js",["116"],[],"import React, { useContext, useEffect, useReducer, useState } from \"react\";\r\nimport { Form, Button } from \"react-bootstrap\";\r\nimport { useNavigate, useParams } from \"react-router-dom\";\r\nimport { apiUrl } from \"../components/constant\";\r\nimport axios from \"axios\";\r\nimport { PostContext } from \"../App\";\r\nexport default function UserEditScreen() {\r\n  const { userInfo } = useContext(PostContext);\r\n  const params = useParams();\r\n  const { id: userId } = params;\r\n  const navigate = useNavigate();\r\n  const [name, setName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [isAdmin, setIsAdmin] = useState(false);\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const { data } = await axios.get(`${apiUrl}/api/users/${userId}`, {\r\n          headers: { Authorization: `Bearer ${userInfo.token}` },\r\n        });\r\n        setName(data.name);\r\n        setEmail(data.email);\r\n        setIsAdmin(data.isAdmin);\r\n      } catch (err) {}\r\n    };\r\n    fetchData();\r\n  }, [userId, userInfo]);\r\n  const submitHandler = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      await axios.put(\r\n        `${apiUrl}/api/users/${userId}`,\r\n        { _id: userId, name, email, isAdmin },\r\n        {\r\n          headers: { Authorization: `Bearer ${userInfo.token}` },\r\n        }\r\n      );\r\n\r\n      navigate(\"/admin/users\");\r\n    } catch (error) {}\r\n  };\r\n  return (\r\n    <>\r\n      <h1>Edit User {userId}</h1>\r\n      <Form onSubmit={submitHandler}>\r\n        <Form.Group className=\"mb-3\" controlId=\"name\">\r\n          <Form.Label>Name</Form.Label>\r\n          <Form.Control\r\n            value={name}\r\n            onChange={(e) => setName(e.target.value)}\r\n            required\r\n          />\r\n        </Form.Group>\r\n        <Form.Group className=\"mb-3\" controlId=\"email\">\r\n          <Form.Label>Email</Form.Label>\r\n          <Form.Control\r\n            value={email}\r\n            type=\"email\"\r\n            onChange={(e) => setEmail(e.target.value)}\r\n            required\r\n          />\r\n        </Form.Group>\r\n\r\n        <Form.Check\r\n          className=\"mb-3\"\r\n          type=\"checkbox\"\r\n          id=\"isAdmin\"\r\n          label=\"isAdmin\"\r\n          checked={isAdmin}\r\n          onChange={(e) => setIsAdmin(e.target.checked)}\r\n        />\r\n\r\n        <div className=\"mb-3\">\r\n          <Button type=\"submit\">Update</Button>\r\n        </div>\r\n      </Form>\r\n    </>\r\n  );\r\n}\r\n","C:\\Users\\binh\\Desktop\\job\\frontend\\src\\screens\\SignUpScreen.js",["117","118","119"],[],"import axios from \"axios\";\r\nimport React, { useContext, useEffect, useState } from \"react\";\r\nimport { PostContext } from \"../App\";\r\nimport { apiUrl } from \"../components/constant\";\r\nimport \"../css/LoginScreen.css\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nfunction SignUpScreen() {\r\n  const navigate = useNavigate();\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [name, setName] = useState(\"\");\r\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n\r\n  const { showNavBar, setShowOffNavBar, setUserInfo, userInfo } =\r\n    useContext(PostContext);\r\n  useEffect(() => {\r\n    const a = () => {\r\n      console.log(showNavBar);\r\n      try {\r\n        setShowOffNavBar(false);\r\n      } catch (err) {}\r\n    };\r\n    a();\r\n  }, []);\r\n  const submitHandler = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const { data } = await axios.post(`${apiUrl}/api/users/signup`, {\r\n        name,\r\n        email,\r\n        password,\r\n        confirmPassword,\r\n      });\r\n      setUserInfo(data);\r\n      localStorage.setItem(\"userInfo\", JSON.stringify(data));\r\n      setShowOffNavBar(true);\r\n      navigate(\"/\");\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n  return (\r\n    <center className=\"login_form\">\r\n      <div className=\"container_form\">\r\n        <div className=\"container_wrap\">\r\n          <form onSubmit={submitHandler}>\r\n            <h1>Sign Up</h1>\r\n            <div className=\"mb-3 email\">\r\n              <h5>Name</h5>\r\n\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                placeholder=\"Enter name\"\r\n                value={name}\r\n                onChange={(e) => setName(e.target.value)}\r\n              />\r\n            </div>\r\n            <div className=\"mb-3 email\">\r\n              <h5>Email address</h5>\r\n\r\n              <input\r\n                type=\"email\"\r\n                className=\"form-control\"\r\n                placeholder=\"Enter email\"\r\n                value={email}\r\n                onChange={(e) => setEmail(e.target.value)}\r\n              />\r\n            </div>\r\n            <div className=\"mb-3 password\">\r\n              <h5>Password</h5>\r\n              <input\r\n                type=\"password\"\r\n                className=\"form-control\"\r\n                placeholder=\"Enter password\"\r\n                value={password}\r\n                onChange={(e) => setPassword(e.target.value)}\r\n              />\r\n            </div>\r\n            <div className=\"mb-3 password\">\r\n              <h5>Confirm Password</h5>\r\n              <input\r\n                type=\"password\"\r\n                className=\"form-control\"\r\n                placeholder=\"Enter confirm password\"\r\n                value={confirmPassword}\r\n                onChange={(e) => setConfirmPassword(e.target.value)}\r\n              />\r\n            </div>\r\n\r\n            <div className=\"d-grid\">\r\n              <button type=\"submit\" className=\"btn btn-primary login_btn\">\r\n                Submit\r\n              </button>\r\n            </div>\r\n            <p className=\"forgot-password text-right dangky\">\r\n              Bạn chưa tạo tài khoản? <a href=\"#\">Đăng ký</a>\r\n            </p>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </center>\r\n  );\r\n}\r\nexport default SignUpScreen;\r\n","C:\\Users\\binh\\Desktop\\job\\frontend\\src\\screens\\PostListScreen.js",["120","121","122"],[],"import { Button, Row, Col } from \"react-bootstrap\";\r\nimport React, { useContext, useEffect, useReducer, useState } from \"react\";\r\nimport { Link, useNavigate, useLocation } from \"react-router-dom\";\r\nimport { apiUrl } from \"../components/constant\";\r\nimport axios from \"axios\";\r\nimport { PostContext } from \"../App\";\r\nexport default function PostListScreen() {\r\n  const navigate = useNavigate();\r\n  const { userInfo } = useContext(PostContext);\r\n  const [posts, setPosts] = useState([]);\r\n  const [successDelete, setSuccessDelete] = useState(false);\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const { data } = await axios.get(`${apiUrl}/api/posts `, {\r\n          headers: { Authorization: `Bearer ${userInfo.token}` },\r\n        });\r\n        setPosts(data);\r\n      } catch (err) {}\r\n    };\r\n\r\n    fetchData();\r\n  }, [userInfo, successDelete]);\r\n  const deleteHandler = async (post) => {\r\n    if (window.confirm(\"Are you sure to delete?\")) {\r\n      try {\r\n        await axios.delete(`${apiUrl}/api/posts/${post._id}`, {\r\n          headers: { Authorization: `Bearer ${userInfo.token}` },\r\n        });\r\n        setSuccessDelete((prev) => !prev);\r\n      } catch (err) {\r\n        console.log(err);\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Row>\r\n        <Col>\r\n          <h1>List Post</h1>\r\n        </Col>\r\n      </Row>\r\n      <>\r\n        <table className=\"table\">\r\n          <thead>\r\n            <tr>\r\n              <th>ID</th>\r\n              <th>TITLE</th>\r\n              <th>SLUG</th>\r\n              <th>IMAGE</th>\r\n              <th>CATEGORY</th>\r\n              <th>CONTENT</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {posts.map((post) => (\r\n              <tr key={post._id}>\r\n                <td>{post._id}</td>\r\n                <td>{post.title}</td>\r\n                <td>{post.slug}</td>\r\n                <td>{post.image}</td>\r\n                <td>{post.category}</td>\r\n                <td>{post.content}</td>\r\n                <td>\r\n                  <Button\r\n                    type=\"button\"\r\n                    variant=\"light\"\r\n                    onClick={() => navigate(`/admin/editposts/${post._id}`)}\r\n                  >\r\n                    Edit\r\n                  </Button>\r\n                  &nbsp;\r\n                  <Button\r\n                    type=\"button\"\r\n                    variant=\"light\"\r\n                    onClick={() => deleteHandler(post)}\r\n                  >\r\n                    Delete\r\n                  </Button>\r\n                </td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      </>\r\n    </>\r\n  );\r\n}\r\n","C:\\Users\\binh\\Desktop\\job\\frontend\\src\\screens\\PostEditScreen.js",[],[],"C:\\Users\\binh\\Desktop\\job\\frontend\\src\\screens\\UncheckPostListScreen.js",["123","124","125","126","127"],[],"import { Button, Row, Col } from \"react-bootstrap\";\r\nimport React, { useContext, useEffect, useReducer, useState } from \"react\";\r\nimport { Link, useNavigate, useLocation } from \"react-router-dom\";\r\nimport { apiUrl } from \"../components/constant\";\r\nimport axios from \"axios\";\r\nimport { PostContext } from \"../App\";\r\nexport default function UncheckPostListScreen() {\r\n  const navigate = useNavigate();\r\n  const { userInfo } = useContext(PostContext);\r\n  const [posts, setPosts] = useState([]);\r\n  const [successDelete, setSuccessDelete] = useState(false);\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const { data } = await axios.get(`${apiUrl}/api/uncheckposts `, {\r\n          headers: { Authorization: `Bearer ${userInfo.token}` },\r\n        });\r\n        setPosts(data);\r\n      } catch (err) {}\r\n    };\r\n\r\n    fetchData();\r\n  }, [userInfo, successDelete]);\r\n  const deleteHandler = async (post) => {\r\n    if (window.confirm(\"Are you sure to delete?\")) {\r\n      try {\r\n        await axios.delete(`${apiUrl}/api/uncheckposts/${post._id}`, {\r\n          headers: { Authorization: `Bearer ${userInfo.token}` },\r\n        });\r\n        setSuccessDelete((prev) => !prev);\r\n      } catch (err) {\r\n        console.log(err);\r\n      }\r\n    }\r\n  };\r\n  const createHandler = async (post) => {\r\n    try {\r\n      const { data } = await axios.post(\r\n        `${apiUrl}/api/posts/`,\r\n        {\r\n          title: post.title,\r\n          slug: post.slug,\r\n          image: post.image,\r\n          category: post.category,\r\n          content: post.content,\r\n        },\r\n        {\r\n          headers: { Authorization: `Bearer ${userInfo.token}` },\r\n        }\r\n      );\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Row>\r\n        <Col>\r\n          <h1>List Post</h1>\r\n        </Col>\r\n      </Row>\r\n      <>\r\n        <table className=\"table\">\r\n          <thead>\r\n            <tr>\r\n              <th>ID</th>\r\n              <th>TITLE</th>\r\n              <th>SLUG</th>\r\n              <th>IMAGE</th>\r\n              <th>CATEGORY</th>\r\n              <th>CONTENT</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {posts.map((post) => (\r\n              <tr key={post._id}>\r\n                <td>{post._id}</td>\r\n                <td>{post.title}</td>\r\n                <td>{post.slug}</td>\r\n                <td>{post.image}</td>\r\n                <td>{post.category}</td>\r\n                <td>{post.content}</td>\r\n                <td>\r\n                  <Button\r\n                    type=\"button\"\r\n                    variant=\"light\"\r\n                    onClick={() => {\r\n                      createHandler(post);\r\n                      deleteHandler(post);\r\n                    }}\r\n                  >\r\n                    Duyệt\r\n                  </Button>\r\n                </td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      </>\r\n    </>\r\n  );\r\n}\r\n",{"ruleId":"128","severity":1,"message":"129","line":3,"column":21,"nodeType":"130","messageId":"131","endLine":3,"endColumn":31},{"ruleId":"128","severity":1,"message":"132","line":10,"column":36,"nodeType":"130","messageId":"131","endLine":10,"endColumn":40},{"ruleId":"133","severity":1,"message":"134","line":22,"column":6,"nodeType":"135","endLine":22,"endColumn":8,"suggestions":"136"},{"ruleId":"137","severity":1,"message":"138","line":27,"column":27,"nodeType":"139","messageId":"140","endLine":27,"endColumn":29},{"ruleId":"128","severity":1,"message":"141","line":2,"column":10,"nodeType":"130","messageId":"131","endLine":2,"endColumn":20},{"ruleId":"128","severity":1,"message":"142","line":19,"column":9,"nodeType":"130","messageId":"131","endLine":19,"endColumn":17},{"ruleId":"128","severity":1,"message":"143","line":23,"column":13,"nodeType":"130","messageId":"131","endLine":23,"endColumn":18},{"ruleId":"144","severity":1,"message":"145","line":42,"column":9,"nodeType":"146","endLine":42,"endColumn":20},{"ruleId":"128","severity":1,"message":"143","line":24,"column":13,"nodeType":"130","messageId":"131","endLine":24,"endColumn":18},{"ruleId":"133","severity":1,"message":"147","line":39,"column":6,"nodeType":"135","endLine":39,"endColumn":8,"suggestions":"148"},{"ruleId":"128","severity":1,"message":"149","line":11,"column":54,"nodeType":"130","messageId":"131","endLine":11,"endColumn":62},{"ruleId":"133","severity":1,"message":"150","line":21,"column":6,"nodeType":"135","endLine":21,"endColumn":8,"suggestions":"151"},{"ruleId":"128","severity":1,"message":"129","line":1,"column":40,"nodeType":"130","messageId":"131","endLine":1,"endColumn":50},{"ruleId":"133","severity":1,"message":"152","line":18,"column":6,"nodeType":"135","endLine":18,"endColumn":8,"suggestions":"153"},{"ruleId":"128","severity":1,"message":"154","line":28,"column":13,"nodeType":"130","messageId":"131","endLine":28,"endColumn":17},{"ruleId":"128","severity":1,"message":"154","line":31,"column":17,"nodeType":"130","messageId":"131","endLine":31,"endColumn":21},{"ruleId":"128","severity":1,"message":"129","line":1,"column":40,"nodeType":"130","messageId":"131","endLine":1,"endColumn":50},{"ruleId":"128","severity":1,"message":"149","line":14,"column":54,"nodeType":"130","messageId":"131","endLine":14,"endColumn":62},{"ruleId":"133","severity":1,"message":"150","line":24,"column":6,"nodeType":"135","endLine":24,"endColumn":8,"suggestions":"155"},{"ruleId":"144","severity":1,"message":"145","line":97,"column":39,"nodeType":"146","endLine":97,"endColumn":51},{"ruleId":"128","severity":1,"message":"129","line":2,"column":40,"nodeType":"130","messageId":"131","endLine":2,"endColumn":50},{"ruleId":"128","severity":1,"message":"156","line":3,"column":10,"nodeType":"130","messageId":"131","endLine":3,"endColumn":14},{"ruleId":"128","severity":1,"message":"157","line":3,"column":29,"nodeType":"130","messageId":"131","endLine":3,"endColumn":40},{"ruleId":"128","severity":1,"message":"129","line":2,"column":40,"nodeType":"130","messageId":"131","endLine":2,"endColumn":50},{"ruleId":"128","severity":1,"message":"156","line":3,"column":10,"nodeType":"130","messageId":"131","endLine":3,"endColumn":14},{"ruleId":"128","severity":1,"message":"157","line":3,"column":29,"nodeType":"130","messageId":"131","endLine":3,"endColumn":40},{"ruleId":"128","severity":1,"message":"142","line":8,"column":9,"nodeType":"130","messageId":"131","endLine":8,"endColumn":17},{"ruleId":"128","severity":1,"message":"154","line":38,"column":15,"nodeType":"130","messageId":"131","endLine":38,"endColumn":19},"no-unused-vars","'useReducer' is defined but never used.","Identifier","unusedVar","'setS' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'setPosts'. Either include it or remove the dependency array.","ArrayExpression",["158"],"array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","'useContext' is defined but never used.","'navigate' is assigned a value but never used.","'error' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement","React Hook useEffect has a missing dependency: 'chude'. Either include it or remove the dependency array.",["159"],"'userInfo' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'setShowOffNavBar' and 'showNavBar'. Either include them or remove the dependency array.",["160"],"React Hook useEffect has a missing dependency: 'setShowOffNavBar'. Either include it or remove the dependency array.",["161"],"'data' is assigned a value but never used.",["162"],"'Link' is defined but never used.","'useLocation' is defined but never used.",{"desc":"163","fix":"164"},{"desc":"165","fix":"166"},{"desc":"167","fix":"168"},{"desc":"169","fix":"170"},{"desc":"167","fix":"171"},"Update the dependencies array to be: [setPosts]",{"range":"172","text":"173"},"Update the dependencies array to be: [chude]",{"range":"174","text":"175"},"Update the dependencies array to be: [setShowOffNavBar, showNavBar]",{"range":"176","text":"177"},"Update the dependencies array to be: [setShowOffNavBar]",{"range":"178","text":"179"},{"range":"180","text":"177"},[692,694],"[setPosts]",[1153,1155],"[chude]",[685,687],"[setShowOffNavBar, showNavBar]",[626,628],"[setShowOffNavBar]",[792,794]]