{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\binh\\\\Desktop\\\\job\\\\frontend\\\\src\\\\components\\\\Post.js\";\nimport { Card } from \"react-bootstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Post(props) {\n  const {\n    post\n  } = props;\n\n  const date = post => {\n    var created_date = new Date(post.createdAt);\n    var months = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\n    var year = created_date.getFullYear();\n    var month = months[created_date.getMonth()];\n    var date = created_date.getDate();\n    var hour = created_date.getHours();\n    var min = created_date.getMinutes();\n    var sec = created_date.getSeconds();\n    var time = date + \",\" + month + \" \" + year + \" \" + hour + \":\" + min + \":\" + sec;\n    return time;\n  };\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    children: [/*#__PURE__*/_jsxDEV(Card.Img, {\n      variant: \"top\",\n      src: post.image\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n      children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n        children: post.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n        children: post.content.length > 100 ? post.content.slice(0, 100).concat(\"...\") : post.content\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Card.Subtitle, {\n        children: date\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n}\n\n_c = Post;\nexport default Post;\n\nvar _c;\n\n$RefreshReg$(_c, \"Post\");","map":{"version":3,"names":["Card","Post","props","post","date","created_date","Date","createdAt","months","year","getFullYear","month","getMonth","getDate","hour","getHours","min","getMinutes","sec","getSeconds","time","image","title","content","length","slice","concat"],"sources":["C:/Users/binh/Desktop/job/frontend/src/components/Post.js"],"sourcesContent":["import { Card } from \"react-bootstrap\";\r\nfunction Post(props) {\r\n  const { post } = props;\r\n  const date = (post) => {\r\n    var created_date = new Date(post.createdAt);\r\n\r\n    var months = [\r\n      \"Jan\",\r\n      \"Feb\",\r\n      \"Mar\",\r\n      \"Apr\",\r\n      \"May\",\r\n      \"Jun\",\r\n      \"Jul\",\r\n      \"Aug\",\r\n      \"Sep\",\r\n      \"Oct\",\r\n      \"Nov\",\r\n      \"Dec\",\r\n    ];\r\n    var year = created_date.getFullYear();\r\n    var month = months[created_date.getMonth()];\r\n    var date = created_date.getDate();\r\n    var hour = created_date.getHours();\r\n    var min = created_date.getMinutes();\r\n    var sec = created_date.getSeconds();\r\n    var time =\r\n      date + \",\" + month + \" \" + year + \" \" + hour + \":\" + min + \":\" + sec;\r\n      return time;\r\n  };\r\n  return (\r\n    <Card>\r\n      <Card.Img variant=\"top\" src={post.image} />\r\n      <Card.Body>\r\n        <Card.Title>{post.title}</Card.Title>\r\n        <Card.Text>\r\n          {post.content.length > 100\r\n            ? post.content.slice(0, 100).concat(\"...\")\r\n            : post.content}\r\n        </Card.Text>\r\n        <Card.Subtitle>{date}</Card.Subtitle>\r\n      </Card.Body>\r\n    </Card>\r\n  );\r\n}\r\nexport default Post;\r\n"],"mappings":";AAAA,SAASA,IAAT,QAAqB,iBAArB;;;AACA,SAASC,IAAT,CAAcC,KAAd,EAAqB;EACnB,MAAM;IAAEC;EAAF,IAAWD,KAAjB;;EACA,MAAME,IAAI,GAAID,IAAD,IAAU;IACrB,IAAIE,YAAY,GAAG,IAAIC,IAAJ,CAASH,IAAI,CAACI,SAAd,CAAnB;IAEA,IAAIC,MAAM,GAAG,CACX,KADW,EAEX,KAFW,EAGX,KAHW,EAIX,KAJW,EAKX,KALW,EAMX,KANW,EAOX,KAPW,EAQX,KARW,EASX,KATW,EAUX,KAVW,EAWX,KAXW,EAYX,KAZW,CAAb;IAcA,IAAIC,IAAI,GAAGJ,YAAY,CAACK,WAAb,EAAX;IACA,IAAIC,KAAK,GAAGH,MAAM,CAACH,YAAY,CAACO,QAAb,EAAD,CAAlB;IACA,IAAIR,IAAI,GAAGC,YAAY,CAACQ,OAAb,EAAX;IACA,IAAIC,IAAI,GAAGT,YAAY,CAACU,QAAb,EAAX;IACA,IAAIC,GAAG,GAAGX,YAAY,CAACY,UAAb,EAAV;IACA,IAAIC,GAAG,GAAGb,YAAY,CAACc,UAAb,EAAV;IACA,IAAIC,IAAI,GACNhB,IAAI,GAAG,GAAP,GAAaO,KAAb,GAAqB,GAArB,GAA2BF,IAA3B,GAAkC,GAAlC,GAAwCK,IAAxC,GAA+C,GAA/C,GAAqDE,GAArD,GAA2D,GAA3D,GAAiEE,GADnE;IAEE,OAAOE,IAAP;EACH,CA1BD;;EA2BA,oBACE,QAAC,IAAD;IAAA,wBACE,QAAC,IAAD,CAAM,GAAN;MAAU,OAAO,EAAC,KAAlB;MAAwB,GAAG,EAAEjB,IAAI,CAACkB;IAAlC;MAAA;MAAA;MAAA;IAAA,QADF,eAEE,QAAC,IAAD,CAAM,IAAN;MAAA,wBACE,QAAC,IAAD,CAAM,KAAN;QAAA,UAAalB,IAAI,CAACmB;MAAlB;QAAA;QAAA;QAAA;MAAA,QADF,eAEE,QAAC,IAAD,CAAM,IAAN;QAAA,UACGnB,IAAI,CAACoB,OAAL,CAAaC,MAAb,GAAsB,GAAtB,GACGrB,IAAI,CAACoB,OAAL,CAAaE,KAAb,CAAmB,CAAnB,EAAsB,GAAtB,EAA2BC,MAA3B,CAAkC,KAAlC,CADH,GAEGvB,IAAI,CAACoB;MAHX;QAAA;QAAA;QAAA;MAAA,QAFF,eAOE,QAAC,IAAD,CAAM,QAAN;QAAA,UAAgBnB;MAAhB;QAAA;QAAA;QAAA;MAAA,QAPF;IAAA;MAAA;MAAA;MAAA;IAAA,QAFF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAcD;;KA3CQH,I;AA4CT,eAAeA,IAAf"},"metadata":{},"sourceType":"module"}