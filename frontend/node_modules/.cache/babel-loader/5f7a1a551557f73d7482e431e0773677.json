{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\binh\\\\Desktop\\\\job\\\\frontend\\\\src\\\\screens\\\\SearchScreen.js\",\n    _s = $RefreshSig$();\n\nimport Post from \"../components/Post\";\nimport { apiUrl } from \"../components/constant\";\nimport { useEffect, useReducer } from 'react';\nimport React from \"react\";\nimport axios from 'axios';\nimport { Row, Col } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case \"FETCH_REQUEST\":\n      return { ...state\n      };\n\n    case \"FETCH_SUCCESS\":\n      return { ...state,\n        posts: action.payload\n      };\n\n    case \"FETCH_FAIL\":\n      return { ...state,\n        error: action.payload\n      };\n\n    default:\n      return state;\n  }\n};\n\nfunction SearchScreen() {\n  _s();\n\n  const {\n    search\n  } = useLocation();\n  const chude = new URLSearchParams(search);\n  const [{\n    error,\n    posts\n  }, dispatch] = useReducer(reducer, {\n    posts: [],\n    error: \"\"\n  });\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const result = await axios.get(`${apiUrl}/api/posts/${chude}`);\n        dispatch({\n          type: \"FETCH_SUCCESS\",\n          payload: result.data\n        });\n      } catch (err) {\n        dispatch({\n          type: \"FETCH_FAIL\",\n          payload: err.message\n        });\n      }\n    };\n\n    fetchData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"posts\",\n    children: /*#__PURE__*/_jsxDEV(Row, {\n      children: posts.map(post => /*#__PURE__*/_jsxDEV(Col, {\n        sm: 6,\n        md: 4,\n        lg: 3,\n        className: \"mb-3\",\n        children: /*#__PURE__*/_jsxDEV(Post, {\n          post: post\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 13\n        }, this)\n      }, post.slug, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n}\n\n_s(SearchScreen, \"lUEVpqPyzOt4lm0vhvKEldvVlqE=\", true);\n\n_c = SearchScreen;\nexport default SearchScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"SearchScreen\");","map":{"version":3,"names":["Post","apiUrl","useEffect","useReducer","React","axios","Row","Col","reducer","state","action","type","posts","payload","error","SearchScreen","search","useLocation","chude","URLSearchParams","dispatch","fetchData","result","get","data","err","message","map","post","slug"],"sources":["C:/Users/binh/Desktop/job/frontend/src/screens/SearchScreen.js"],"sourcesContent":["import Post from \"../components/Post\";\r\nimport { apiUrl } from \"../components/constant\";\r\nimport { useEffect, useReducer,  } from 'react';\r\nimport React from \"react\";\r\nimport axios from 'axios';\r\nimport {Row,Col} from 'react-bootstrap';\r\n\r\nconst reducer = (state, action) => {\r\n  switch (action.type) {\r\n    case \"FETCH_REQUEST\":\r\n      return { ...state};\r\n    case \"FETCH_SUCCESS\":\r\n      return { ...state, posts: action.payload };\r\n    case \"FETCH_FAIL\":\r\n      return { ...state, error: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\nfunction SearchScreen() {\r\n  const { search } = useLocation();\r\n  const chude = new URLSearchParams(search);\r\n  const [{  error, posts }, dispatch] = useReducer(reducer, {\r\n    posts: [],\r\n    error: \"\",\r\n  });\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const result = await axios.get(`${apiUrl}/api/posts/${chude}`);\r\n        dispatch({ type: \"FETCH_SUCCESS\", payload: result.data });\r\n      } catch (err) {\r\n        dispatch({ type: \"FETCH_FAIL\", payload: err.message });\r\n      }\r\n\r\n    };\r\n    fetchData();\r\n  }, []);\r\n  return (\r\n    <div className=\"posts\">\r\n      <Row>\r\n        {posts.map((post) => (\r\n          <Col key={post.slug} sm={6} md={4} lg={3} className=\"mb-3\">\r\n            <Post post={post}></Post>\r\n          </Col>\r\n        ))}\r\n      </Row>\r\n    </div>\r\n  );\r\n}\r\nexport default SearchScreen;\r\n"],"mappings":";;;AAAA,OAAOA,IAAP,MAAiB,oBAAjB;AACA,SAASC,MAAT,QAAuB,wBAAvB;AACA,SAASC,SAAT,EAAoBC,UAApB,QAAwC,OAAxC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAAQC,GAAR,EAAYC,GAAZ,QAAsB,iBAAtB;;;AAEA,MAAMC,OAAO,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;EACjC,QAAQA,MAAM,CAACC,IAAf;IACE,KAAK,eAAL;MACE,OAAO,EAAE,GAAGF;MAAL,CAAP;;IACF,KAAK,eAAL;MACE,OAAO,EAAE,GAAGA,KAAL;QAAYG,KAAK,EAAEF,MAAM,CAACG;MAA1B,CAAP;;IACF,KAAK,YAAL;MACE,OAAO,EAAE,GAAGJ,KAAL;QAAYK,KAAK,EAAEJ,MAAM,CAACG;MAA1B,CAAP;;IACF;MACE,OAAOJ,KAAP;EARJ;AAUD,CAXD;;AAYA,SAASM,YAAT,GAAwB;EAAA;;EACtB,MAAM;IAAEC;EAAF,IAAaC,WAAW,EAA9B;EACA,MAAMC,KAAK,GAAG,IAAIC,eAAJ,CAAoBH,MAApB,CAAd;EACA,MAAM,CAAC;IAAGF,KAAH;IAAUF;EAAV,CAAD,EAAoBQ,QAApB,IAAgCjB,UAAU,CAACK,OAAD,EAAU;IACxDI,KAAK,EAAE,EADiD;IAExDE,KAAK,EAAE;EAFiD,CAAV,CAAhD;EAIAZ,SAAS,CAAC,MAAM;IACd,MAAMmB,SAAS,GAAG,YAAY;MAC5B,IAAI;QACF,MAAMC,MAAM,GAAG,MAAMjB,KAAK,CAACkB,GAAN,CAAW,GAAEtB,MAAO,cAAaiB,KAAM,EAAvC,CAArB;QACAE,QAAQ,CAAC;UAAET,IAAI,EAAE,eAAR;UAAyBE,OAAO,EAAES,MAAM,CAACE;QAAzC,CAAD,CAAR;MACD,CAHD,CAGE,OAAOC,GAAP,EAAY;QACZL,QAAQ,CAAC;UAAET,IAAI,EAAE,YAAR;UAAsBE,OAAO,EAAEY,GAAG,CAACC;QAAnC,CAAD,CAAR;MACD;IAEF,CARD;;IASAL,SAAS;EACV,CAXQ,EAWN,EAXM,CAAT;EAYA,oBACE;IAAK,SAAS,EAAC,OAAf;IAAA,uBACE,QAAC,GAAD;MAAA,UACGT,KAAK,CAACe,GAAN,CAAWC,IAAD,iBACT,QAAC,GAAD;QAAqB,EAAE,EAAE,CAAzB;QAA4B,EAAE,EAAE,CAAhC;QAAmC,EAAE,EAAE,CAAvC;QAA0C,SAAS,EAAC,MAApD;QAAA,uBACE,QAAC,IAAD;UAAM,IAAI,EAAEA;QAAZ;UAAA;UAAA;UAAA;QAAA;MADF,GAAUA,IAAI,CAACC,IAAf;QAAA;QAAA;QAAA;MAAA,QADD;IADH;MAAA;MAAA;MAAA;IAAA;EADF;IAAA;IAAA;IAAA;EAAA,QADF;AAWD;;GA9BQd,Y;;KAAAA,Y;AA+BT,eAAeA,YAAf"},"metadata":{},"sourceType":"module"}